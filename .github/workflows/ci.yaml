name: CI

on:
  push:
    branches: 
      - main
  workflow_dispatch:

jobs:

  provision-runtime-group:
  
    runs-on: ubuntu-22.04
    name: Provision New Runtime Group

    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Create Runtime Group
      id: create-rg
      run: |
        echo "RUNTIME_GROUP_ID=$(curl -X POST ${{ secrets.KONNECT_ADDR }}/v2/runtime-groups -H "Authorization:Bearer ${{ secrets.KONNECT_TOKEN }}" -H 'Content-Type: application/json' -H 'accept: application/json' --data '{"name": "${{ vars.RUNTIME_GROUP_NAME }}-${{ vars.RUNTIME_GROUP_ENV }}","description": "${{ vars.RUNTIME_GROUP_DESCRIPTION }}","labels": {"env": "dev","type":"k8s","team":"bu1"}}' | jq -r '.id')" >> "$GITHUB_OUTPUT"

    - name: Upload Certificate
      id: upload-cert
      run: |
        curl -X POST ${{ secrets.KONNECT_ADDR }}/v2/runtime-groups/${{ steps.create-rg.outputs.RUNTIME_GROUP_ID }}/dp-client-certificates -H "Authorization: Bearer ${{ secrets.KONNECT_TOKEN }}" -H 'Content-Type: application/json' --data '{"cert": "${{ vars.RUNTIME_GROUP_CERT }}"}'

    - name: Create Team
      id: create-team
      run: |
        echo "TEAM_ID=$(curl -X POST https://global.api.konghq.com/v2/teams -H 'Content-Type: application/json' -H 'accept: application/json' -H "Authorization: Bearer ${{ secrets.KONNECT_TOKEN }}" --data '{"name":"${{ vars.TEAM_NAME }}","description":"${{ vars.TEAM_DESCRIPTION }}"}' | jq -r '.id')" >> "$GITHUB_OUTPUT"

    - name: Map Team
      id: map-team
      run: |
        curl -X PUT https://global.api.konghq.com/v2/identity-provider/team-mappings -H 'Content-Type: application/json' -H 'accept: application/json' -H "Authorization: Bearer ${{ secrets.KONNECT_TOKEN }}" --data '{"mappings": [{"group": "${{ vars.TEAM_NAME_IDP }}","team_ids": ["${{ steps.create-team.outputs.TEAM_ID }}"]}]}'

    - name: Assign Role
      id: assign-role
      run: |
        curl -X POST https://global.api.konghq.com/v2/teams/${{ steps.create-team.outputs.TEAM_ID }}/assigned-roles -H 'Content-Type: application/json' -H 'accept: application/json'-H "Authorization: Bearer ${{ secrets.KONNECT_TOKEN }}" --data '{"role_name":"Admin","entity_id":"${{ steps.create-rg.outputs.RUNTIME_GROUP_ID }}","entity_type_name":"Runtime Groups","entity_region":"us"}'
